{
  "contractName": "CollectiveToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/SagarWorkspace/Collective/backend/contracts/CollectiveToken.sol\":\"CollectiveToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/SagarWorkspace/Collective/backend/contracts/CollectiveToken.sol\":{\"keccak256\":\"0xe5f8242bd7d3a12001f8f9fb1ba1796c50ce976f2d1e8910a0dc259142d6b2a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://684d4885746362d9bb01b03dea01930be67546ae0f5f4b7fb23837ff0bc32df8\",\"dweb:/ipfs/QmQnQwywH6WnNYShA3Lw8PLmL1UJZh5VmYUSiyhbmzPYYa\"]},\"/D/SagarWorkspace/Collective/backend/contracts/ERC.sol\":{\"keccak256\":\"0x56c237f8da4ff0efb2d5c6f23bc389312dc0e623c23829d379432b4dfaae0aa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cfde9be6d8b989e58292c9281b148a5a6e764538276613b6e78990d4b18c799\",\"dweb:/ipfs/QmPNnENsJu16FYpGDPCfZ2ofjd1Krc4itQVSL1RAay61KS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600f81526020017f436f6c6c656374697665546f6b656e00000000000000000000000000000000008152506040518060400160405280600381526020017f43545600000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000969291906200024b565b508060049080519060200190620000af9291906200024b565b505050620000d23364e8d4a51000620000d8640100000000026401000000009004565b62000499565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200014b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000142906200034e565b60405180910390fd5b620001686000838362000246640100000000026401000000009004565b80600260008282546200017c91906200039e565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001d391906200039e565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200023a919062000370565b60405180910390a35050565b505050565b828054620002599062000405565b90600052602060002090601f0160209004810192826200027d5760008555620002c9565b82601f106200029857805160ff1916838001178555620002c9565b82800160010185558215620002c9579182015b82811115620002c8578251825591602001919060010190620002ab565b5b509050620002d89190620002dc565b5090565b5b80821115620002f7576000816000905550600101620002dd565b5090565b60006200030a601f836200038d565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b6200034881620003fb565b82525050565b600060208201905081810360008301526200036981620002fb565b9050919050565b60006020820190506200038760008301846200033d565b92915050565b600082825260208201905092915050565b6000620003ab82620003fb565b9150620003b883620003fb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620003f057620003ef6200043b565b5b828201905092915050565b6000819050919050565b600060028204905060018216806200041e57607f821691505b602082108114156200043557620004346200046a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b61139980620004a96000396000f3fe608060405234801561001057600080fd5b50600436106100c6576000357c010000000000000000000000000000000000000000000000000000000090048063395093511161008e578063395093511461018557806370a08231146101b557806395d89b41146101e5578063a457c2d714610203578063a9059cbb14610233578063dd62ed3e14610263576100c6565b806306fdde03146100cb578063095ea7b3146100e957806318160ddd1461011957806323b872dd14610137578063313ce56714610167575b600080fd5b6100d3610293565b6040516100e0919061102e565b60405180910390f35b61010360048036038101906100fe9190610ca7565b610325565b6040516101109190611013565b60405180910390f35b610121610343565b60405161012e9190611130565b60405180910390f35b610151600480360381019061014c9190610c58565b61034d565b60405161015e9190611013565b60405180910390f35b61016f61044e565b60405161017c919061114b565b60405180910390f35b61019f600480360381019061019a9190610ca7565b610453565b6040516101ac9190611013565b60405180910390f35b6101cf60048036038101906101ca9190610bf3565b6104ff565b6040516101dc9190611130565b60405180910390f35b6101ed610547565b6040516101fa919061102e565b60405180910390f35b61021d60048036038101906102189190610ca7565b6105d9565b60405161022a9190611013565b60405180910390f35b61024d60048036038101906102489190610ca7565b6106cd565b60405161025a9190611013565b60405180910390f35b61027d60048036038101906102789190610c1c565b6106eb565b60405161028a9190611130565b60405180910390f35b6060600380546102a290611294565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce90611294565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b5050505050905090565b6000610339610332610772565b848461077a565b6001905092915050565b6000600254905090565b600061035a848484610945565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103a5610772565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610425576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041c906110b0565b60405180910390fd5b61044285610431610772565b858461043d91906111d8565b61077a565b60019150509392505050565b600090565b60006104f5610460610772565b84846001600061046e610772565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104f09190611182565b61077a565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461055690611294565b80601f016020809104026020016040519081016040528092919081815260200182805461058290611294565b80156105cf5780601f106105a4576101008083540402835291602001916105cf565b820191906000526020600020905b8154815290600101906020018083116105b257829003601f168201915b5050505050905090565b600080600160006105e8610772565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069c90611110565b60405180910390fd5b6106c26106b0610772565b8585846106bd91906111d8565b61077a565b600191505092915050565b60006106e16106da610772565b8484610945565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e1906110f0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561085a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085190611070565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109389190611130565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac906110d0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1c90611050565b60405180910390fd5b610a30838383610bc4565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ab6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aad90611090565b60405180910390fd5b8181610ac291906111d8565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b529190611182565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bb69190611130565b60405180910390a350505050565b505050565b600081359050610bd881611335565b92915050565b600081359050610bed8161134c565b92915050565b600060208284031215610c0557600080fd5b6000610c1384828501610bc9565b91505092915050565b60008060408385031215610c2f57600080fd5b6000610c3d85828601610bc9565b9250506020610c4e85828601610bc9565b9150509250929050565b600080600060608486031215610c6d57600080fd5b6000610c7b86828701610bc9565b9350506020610c8c86828701610bc9565b9250506040610c9d86828701610bde565b9150509250925092565b60008060408385031215610cba57600080fd5b6000610cc885828601610bc9565b9250506020610cd985828601610bde565b9150509250929050565b610cec8161121e565b82525050565b6000610cfd82611166565b610d078185611171565b9350610d17818560208601611261565b610d2081611324565b840191505092915050565b6000610d38602383611171565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d9e602283611171565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e04602683611171565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e6a602883611171565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610ed0602583611171565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f36602483611171565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f9c602583611171565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b610ffe8161124a565b82525050565b61100d81611254565b82525050565b60006020820190506110286000830184610ce3565b92915050565b600060208201905081810360008301526110488184610cf2565b905092915050565b6000602082019050818103600083015261106981610d2b565b9050919050565b6000602082019050818103600083015261108981610d91565b9050919050565b600060208201905081810360008301526110a981610df7565b9050919050565b600060208201905081810360008301526110c981610e5d565b9050919050565b600060208201905081810360008301526110e981610ec3565b9050919050565b6000602082019050818103600083015261110981610f29565b9050919050565b6000602082019050818103600083015261112981610f8f565b9050919050565b60006020820190506111456000830184610ff5565b92915050565b60006020820190506111606000830184611004565b92915050565b600081519050919050565b600082825260208201905092915050565b600061118d8261124a565b91506111988361124a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111cd576111cc6112c6565b5b828201905092915050565b60006111e38261124a565b91506111ee8361124a565b925082821015611201576112006112c6565b5b828203905092915050565b60006112178261122a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561127f578082015181840152602081019050611264565b8381111561128e576000848401525b50505050565b600060028204905060018216806112ac57607f821691505b602082108114156112c0576112bf6112f5565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b61133e8161120c565b811461134957600080fd5b50565b6113558161124a565b811461136057600080fd5b5056fea2646970667358221220d269f85f08a45870c27c4372e464ebace3f7017ab1eebbfd4b8079ecb32e004564736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100c6576000357c010000000000000000000000000000000000000000000000000000000090048063395093511161008e578063395093511461018557806370a08231146101b557806395d89b41146101e5578063a457c2d714610203578063a9059cbb14610233578063dd62ed3e14610263576100c6565b806306fdde03146100cb578063095ea7b3146100e957806318160ddd1461011957806323b872dd14610137578063313ce56714610167575b600080fd5b6100d3610293565b6040516100e0919061102e565b60405180910390f35b61010360048036038101906100fe9190610ca7565b610325565b6040516101109190611013565b60405180910390f35b610121610343565b60405161012e9190611130565b60405180910390f35b610151600480360381019061014c9190610c58565b61034d565b60405161015e9190611013565b60405180910390f35b61016f61044e565b60405161017c919061114b565b60405180910390f35b61019f600480360381019061019a9190610ca7565b610453565b6040516101ac9190611013565b60405180910390f35b6101cf60048036038101906101ca9190610bf3565b6104ff565b6040516101dc9190611130565b60405180910390f35b6101ed610547565b6040516101fa919061102e565b60405180910390f35b61021d60048036038101906102189190610ca7565b6105d9565b60405161022a9190611013565b60405180910390f35b61024d60048036038101906102489190610ca7565b6106cd565b60405161025a9190611013565b60405180910390f35b61027d60048036038101906102789190610c1c565b6106eb565b60405161028a9190611130565b60405180910390f35b6060600380546102a290611294565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce90611294565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b5050505050905090565b6000610339610332610772565b848461077a565b6001905092915050565b6000600254905090565b600061035a848484610945565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103a5610772565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610425576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041c906110b0565b60405180910390fd5b61044285610431610772565b858461043d91906111d8565b61077a565b60019150509392505050565b600090565b60006104f5610460610772565b84846001600061046e610772565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104f09190611182565b61077a565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461055690611294565b80601f016020809104026020016040519081016040528092919081815260200182805461058290611294565b80156105cf5780601f106105a4576101008083540402835291602001916105cf565b820191906000526020600020905b8154815290600101906020018083116105b257829003601f168201915b5050505050905090565b600080600160006105e8610772565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069c90611110565b60405180910390fd5b6106c26106b0610772565b8585846106bd91906111d8565b61077a565b600191505092915050565b60006106e16106da610772565b8484610945565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e1906110f0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561085a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085190611070565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109389190611130565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac906110d0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1c90611050565b60405180910390fd5b610a30838383610bc4565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ab6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aad90611090565b60405180910390fd5b8181610ac291906111d8565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b529190611182565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bb69190611130565b60405180910390a350505050565b505050565b600081359050610bd881611335565b92915050565b600081359050610bed8161134c565b92915050565b600060208284031215610c0557600080fd5b6000610c1384828501610bc9565b91505092915050565b60008060408385031215610c2f57600080fd5b6000610c3d85828601610bc9565b9250506020610c4e85828601610bc9565b9150509250929050565b600080600060608486031215610c6d57600080fd5b6000610c7b86828701610bc9565b9350506020610c8c86828701610bc9565b9250506040610c9d86828701610bde565b9150509250925092565b60008060408385031215610cba57600080fd5b6000610cc885828601610bc9565b9250506020610cd985828601610bde565b9150509250929050565b610cec8161121e565b82525050565b6000610cfd82611166565b610d078185611171565b9350610d17818560208601611261565b610d2081611324565b840191505092915050565b6000610d38602383611171565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d9e602283611171565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e04602683611171565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e6a602883611171565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610ed0602583611171565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f36602483611171565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f9c602583611171565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b610ffe8161124a565b82525050565b61100d81611254565b82525050565b60006020820190506110286000830184610ce3565b92915050565b600060208201905081810360008301526110488184610cf2565b905092915050565b6000602082019050818103600083015261106981610d2b565b9050919050565b6000602082019050818103600083015261108981610d91565b9050919050565b600060208201905081810360008301526110a981610df7565b9050919050565b600060208201905081810360008301526110c981610e5d565b9050919050565b600060208201905081810360008301526110e981610ec3565b9050919050565b6000602082019050818103600083015261110981610f29565b9050919050565b6000602082019050818103600083015261112981610f8f565b9050919050565b60006020820190506111456000830184610ff5565b92915050565b60006020820190506111606000830184611004565b92915050565b600081519050919050565b600082825260208201905092915050565b600061118d8261124a565b91506111988361124a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111cd576111cc6112c6565b5b828201905092915050565b60006111e38261124a565b91506111ee8361124a565b925082821015611201576112006112c6565b5b828203905092915050565b60006112178261122a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561127f578082015181840152602081019050611264565b8381111561128e576000848401525b50505050565b600060028204905060018216806112ac57607f821691505b602082108114156112c0576112bf6112f5565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b61133e8161120c565b811461134957600080fd5b50565b6113558161124a565b811461136057600080fd5b5056fea2646970667358221220d269f85f08a45870c27c4372e464ebace3f7017ab1eebbfd4b8079ecb32e004564736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "77:225:1:-:0;;;114:91;;;;;;;;;;1981:114:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2056:5;2048;:13;;;;;;;;;;;;:::i;:::-;;2081:7;2071;:17;;;;;;;;;;;;:::i;:::-;;1981:114;;166:32:1::1;172:10;184:13;166:5;;;:32;;;:::i;:::-;77:225:::0;;8106:330:2;8208:1;8189:21;;:7;:21;;;;8181:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8257:49;8286:1;8290:7;8299:6;8257:20;;;:49;;;:::i;:::-;8333:6;8317:12;;:22;;;;;;;:::i;:::-;;;;;;;;8371:6;8349:9;:18;8359:7;8349:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8413:7;8392:37;;8409:1;8392:37;;;8422:6;8392:37;;;;;;:::i;:::-;;;;;;;;8106:330;;:::o;10589:92::-;;;;:::o;77:225:1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:329:7:-;;170:67;234:2;229:3;170:67;:::i;:::-;163:74;;267:33;263:1;258:3;254:11;247:54;327:2;322:3;318:12;311:19;;153:183;;;:::o;342:118::-;429:24;447:5;429:24;:::i;:::-;424:3;417:37;407:53;;:::o;466:419::-;;670:2;659:9;655:18;647:26;;719:9;713:4;709:20;705:1;694:9;690:17;683:47;747:131;873:4;747:131;:::i;:::-;739:139;;637:248;;;:::o;891:222::-;;1022:2;1011:9;1007:18;999:26;;1035:71;1103:1;1092:9;1088:17;1079:6;1035:71;:::i;:::-;989:124;;;;:::o;1119:169::-;;1237:6;1232:3;1225:19;1277:4;1272:3;1268:14;1253:29;;1215:73;;;;:::o;1294:305::-;;1353:20;1371:1;1353:20;:::i;:::-;1348:25;;1387:20;1405:1;1387:20;:::i;:::-;1382:25;;1541:1;1473:66;1469:74;1466:1;1463:81;1460:2;;;1547:18;;:::i;:::-;1460:2;1591:1;1588;1584:9;1577:16;;1338:261;;;;:::o;1605:77::-;;1671:5;1660:16;;1650:32;;;:::o;1688:320::-;;1769:1;1763:4;1759:12;1749:22;;1816:1;1810:4;1806:12;1837:18;1827:2;;1893:4;1885:6;1881:17;1871:27;;1827:2;1955;1947:6;1944:14;1924:18;1921:38;1918:2;;;1974:18;;:::i;:::-;1918:2;1739:269;;;;:::o;2014:180::-;2062:77;2059:1;2052:88;2159:4;2156:1;2149:15;2183:4;2180:1;2173:15;2200:180;2248:77;2245:1;2238:88;2345:4;2342:1;2335:15;2369:4;2366:1;2359:15;77:225:1;;;;;;;",
  "deployedSourceMap": "77:225:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2160:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4257:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3248:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4890:414;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;211:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5699:212:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3412:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2371:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6398:371;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3970:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2160:98;2214:13;2246:5;2239:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2160:98;:::o;4257:166::-;4340:4;4356:39;4365:12;:10;:12::i;:::-;4379:7;4388:6;4356:8;:39::i;:::-;4412:4;4405:11;;4257:166;;;;:::o;3248:106::-;3309:7;3335:12;;3328:19;;3248:106;:::o;4890:414::-;4996:4;5012:36;5022:6;5030:9;5041:6;5012:9;:36::i;:::-;5059:24;5086:11;:19;5098:6;5086:19;;;;;;;;;;;;;;;:33;5106:12;:10;:12::i;:::-;5086:33;;;;;;;;;;;;;;;;5059:60;;5157:6;5137:16;:26;;5129:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5218:57;5227:6;5235:12;:10;:12::i;:::-;5268:6;5249:16;:25;;;;:::i;:::-;5218:8;:57::i;:::-;5293:4;5286:11;;;4890:414;;;;;:::o;211:89:1:-;269:5;211:89;:::o;5699:212:2:-;5787:4;5803:80;5812:12;:10;:12::i;:::-;5826:7;5872:10;5835:11;:25;5847:12;:10;:12::i;:::-;5835:25;;;;;;;;;;;;;;;:34;5861:7;5835:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;5803:8;:80::i;:::-;5900:4;5893:11;;5699:212;;;;:::o;3412:125::-;3486:7;3512:9;:18;3522:7;3512:18;;;;;;;;;;;;;;;;3505:25;;3412:125;;;:::o;2371:102::-;2427:13;2459:7;2452:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2371:102;:::o;6398:371::-;6491:4;6507:24;6534:11;:25;6546:12;:10;:12::i;:::-;6534:25;;;;;;;;;;;;;;;:34;6560:7;6534:34;;;;;;;;;;;;;;;;6507:61;;6606:15;6586:16;:35;;6578:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6673:67;6682:12;:10;:12::i;:::-;6696:7;6724:15;6705:16;:34;;;;:::i;:::-;6673:8;:67::i;:::-;6758:4;6751:11;;;6398:371;;;;:::o;3740:172::-;3826:4;3842:42;3852:12;:10;:12::i;:::-;3866:9;3877:6;3842:9;:42::i;:::-;3901:4;3894:11;;3740:172;;;;:::o;3970:149::-;4059:7;4085:11;:18;4097:5;4085:18;;;;;;;;;;;;;;;:27;4104:7;4085:27;;;;;;;;;;;;;;;;4078:34;;3970:149;;;;:::o;586:96:6:-;639:7;665:10;658:17;;586:96;:::o;9662:340:2:-;9780:1;9763:19;;:5;:19;;;;9755:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9860:1;9841:21;;:7;:21;;;;9833:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9942:6;9912:11;:18;9924:5;9912:18;;;;;;;;;;;;;;;:27;9931:7;9912:27;;;;;;;;;;;;;;;:36;;;;9979:7;9963:32;;9972:5;9963:32;;;9988:6;9963:32;;;;;;:::i;:::-;;;;;;;;9662:340;;;:::o;7243:592::-;7366:1;7348:20;;:6;:20;;;;7340:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7449:1;7428:23;;:9;:23;;;;7420:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7502:47;7523:6;7531:9;7542:6;7502:20;:47::i;:::-;7560:21;7584:9;:17;7594:6;7584:17;;;;;;;;;;;;;;;;7560:41;;7636:6;7619:13;:23;;7611:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7731:6;7715:13;:22;;;;:::i;:::-;7695:9;:17;7705:6;7695:17;;;;;;;;;;;;;;;:42;;;;7771:6;7747:9;:20;7757:9;7747:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;7810:9;7793:35;;7802:6;7793:35;;;7821:6;7793:35;;;;;;:::i;:::-;;;;;;;;7243:592;;;;:::o;10589:92::-;;;;:::o;7:139:7:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;;;;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;;;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:109::-;2030:21;2045:5;2030:21;:::i;:::-;2025:3;2018:34;2008:50;;:::o;2064:364::-;;2180:39;2213:5;2180:39;:::i;:::-;2235:71;2299:6;2294:3;2235:71;:::i;:::-;2228:78;;2315:52;2360:6;2355:3;2348:4;2341:5;2337:16;2315:52;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2156:272;;;;;:::o;2434:367::-;;2597:67;2661:2;2656:3;2597:67;:::i;:::-;2590:74;;2694:34;2690:1;2685:3;2681:11;2674:55;2760:5;2755:2;2750:3;2746:12;2739:27;2792:2;2787:3;2783:12;2776:19;;2580:221;;;:::o;2807:366::-;;2970:67;3034:2;3029:3;2970:67;:::i;:::-;2963:74;;3067:34;3063:1;3058:3;3054:11;3047:55;3133:4;3128:2;3123:3;3119:12;3112:26;3164:2;3159:3;3155:12;3148:19;;2953:220;;;:::o;3179:370::-;;3342:67;3406:2;3401:3;3342:67;:::i;:::-;3335:74;;3439:34;3435:1;3430:3;3426:11;3419:55;3505:8;3500:2;3495:3;3491:12;3484:30;3540:2;3535:3;3531:12;3524:19;;3325:224;;;:::o;3555:372::-;;3718:67;3782:2;3777:3;3718:67;:::i;:::-;3711:74;;3815:34;3811:1;3806:3;3802:11;3795:55;3881:10;3876:2;3871:3;3867:12;3860:32;3918:2;3913:3;3909:12;3902:19;;3701:226;;;:::o;3933:369::-;;4096:67;4160:2;4155:3;4096:67;:::i;:::-;4089:74;;4193:34;4189:1;4184:3;4180:11;4173:55;4259:7;4254:2;4249:3;4245:12;4238:29;4293:2;4288:3;4284:12;4277:19;;4079:223;;;:::o;4308:368::-;;4471:67;4535:2;4530:3;4471:67;:::i;:::-;4464:74;;4568:34;4564:1;4559:3;4555:11;4548:55;4634:6;4629:2;4624:3;4620:12;4613:28;4667:2;4662:3;4658:12;4651:19;;4454:222;;;:::o;4682:369::-;;4845:67;4909:2;4904:3;4845:67;:::i;:::-;4838:74;;4942:34;4938:1;4933:3;4929:11;4922:55;5008:7;5003:2;4998:3;4994:12;4987:29;5042:2;5037:3;5033:12;5026:19;;4828:223;;;:::o;5057:118::-;5144:24;5162:5;5144:24;:::i;:::-;5139:3;5132:37;5122:53;;:::o;5181:112::-;5264:22;5280:5;5264:22;:::i;:::-;5259:3;5252:35;5242:51;;:::o;5299:210::-;;5424:2;5413:9;5409:18;5401:26;;5437:65;5499:1;5488:9;5484:17;5475:6;5437:65;:::i;:::-;5391:118;;;;:::o;5515:313::-;;5666:2;5655:9;5651:18;5643:26;;5715:9;5709:4;5705:20;5701:1;5690:9;5686:17;5679:47;5743:78;5816:4;5807:6;5743:78;:::i;:::-;5735:86;;5633:195;;;;:::o;5834:419::-;;6038:2;6027:9;6023:18;6015:26;;6087:9;6081:4;6077:20;6073:1;6062:9;6058:17;6051:47;6115:131;6241:4;6115:131;:::i;:::-;6107:139;;6005:248;;;:::o;6259:419::-;;6463:2;6452:9;6448:18;6440:26;;6512:9;6506:4;6502:20;6498:1;6487:9;6483:17;6476:47;6540:131;6666:4;6540:131;:::i;:::-;6532:139;;6430:248;;;:::o;6684:419::-;;6888:2;6877:9;6873:18;6865:26;;6937:9;6931:4;6927:20;6923:1;6912:9;6908:17;6901:47;6965:131;7091:4;6965:131;:::i;:::-;6957:139;;6855:248;;;:::o;7109:419::-;;7313:2;7302:9;7298:18;7290:26;;7362:9;7356:4;7352:20;7348:1;7337:9;7333:17;7326:47;7390:131;7516:4;7390:131;:::i;:::-;7382:139;;7280:248;;;:::o;7534:419::-;;7738:2;7727:9;7723:18;7715:26;;7787:9;7781:4;7777:20;7773:1;7762:9;7758:17;7751:47;7815:131;7941:4;7815:131;:::i;:::-;7807:139;;7705:248;;;:::o;7959:419::-;;8163:2;8152:9;8148:18;8140:26;;8212:9;8206:4;8202:20;8198:1;8187:9;8183:17;8176:47;8240:131;8366:4;8240:131;:::i;:::-;8232:139;;8130:248;;;:::o;8384:419::-;;8588:2;8577:9;8573:18;8565:26;;8637:9;8631:4;8627:20;8623:1;8612:9;8608:17;8601:47;8665:131;8791:4;8665:131;:::i;:::-;8657:139;;8555:248;;;:::o;8809:222::-;;8940:2;8929:9;8925:18;8917:26;;8953:71;9021:1;9010:9;9006:17;8997:6;8953:71;:::i;:::-;8907:124;;;;:::o;9037:214::-;;9164:2;9153:9;9149:18;9141:26;;9177:67;9241:1;9230:9;9226:17;9217:6;9177:67;:::i;:::-;9131:120;;;;:::o;9257:99::-;;9343:5;9337:12;9327:22;;9316:40;;;:::o;9362:169::-;;9480:6;9475:3;9468:19;9520:4;9515:3;9511:14;9496:29;;9458:73;;;;:::o;9537:305::-;;9596:20;9614:1;9596:20;:::i;:::-;9591:25;;9630:20;9648:1;9630:20;:::i;:::-;9625:25;;9784:1;9716:66;9712:74;9709:1;9706:81;9703:2;;;9790:18;;:::i;:::-;9703:2;9834:1;9831;9827:9;9820:16;;9581:261;;;;:::o;9848:191::-;;9908:20;9926:1;9908:20;:::i;:::-;9903:25;;9942:20;9960:1;9942:20;:::i;:::-;9937:25;;9981:1;9978;9975:8;9972:2;;;9986:18;;:::i;:::-;9972:2;10031:1;10028;10024:9;10016:17;;9893:146;;;;:::o;10045:96::-;;10111:24;10129:5;10111:24;:::i;:::-;10100:35;;10090:51;;;:::o;10147:90::-;;10224:5;10217:13;10210:21;10199:32;;10189:48;;;:::o;10243:126::-;;10320:42;10313:5;10309:54;10298:65;;10288:81;;;:::o;10375:77::-;;10441:5;10430:16;;10420:32;;;:::o;10458:86::-;;10533:4;10526:5;10522:16;10511:27;;10501:43;;;:::o;10550:307::-;10618:1;10628:113;10642:6;10639:1;10636:13;10628:113;;;10727:1;10722:3;10718:11;10712:18;10708:1;10703:3;10699:11;10692:39;10664:2;10661:1;10657:10;10652:15;;10628:113;;;10759:6;10756:1;10753:13;10750:2;;;10839:1;10830:6;10825:3;10821:16;10814:27;10750:2;10599:258;;;;:::o;10863:320::-;;10944:1;10938:4;10934:12;10924:22;;10991:1;10985:4;10981:12;11012:18;11002:2;;11068:4;11060:6;11056:17;11046:27;;11002:2;11130;11122:6;11119:14;11099:18;11096:38;11093:2;;;11149:18;;:::i;:::-;11093:2;10914:269;;;;:::o;11189:180::-;11237:77;11234:1;11227:88;11334:4;11331:1;11324:15;11358:4;11355:1;11348:15;11375:180;11423:77;11420:1;11413:88;11520:4;11517:1;11510:15;11544:4;11541:1;11534:15;11561:102;;11653:2;11649:7;11644:2;11637:5;11633:14;11629:28;11619:38;;11609:54;;;:::o;11669:122::-;11742:24;11760:5;11742:24;:::i;:::-;11735:5;11732:35;11722:2;;11781:1;11778;11771:12;11722:2;11712:79;:::o;11797:122::-;11870:24;11888:5;11870:24;:::i;:::-;11863:5;11860:35;11850:2;;11909:1;11906;11899:12;11850:2;11840:79;:::o",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./ERC.sol\";\n\ncontract CollectiveToken is ERC{\n    constructor() ERC(\"CollectiveToken\",\"CTV\"){\n        _mint(msg.sender, 1000000000000);\n    }\n\n    function decimals() public view virtual override returns (uint8){\n        return 0;\n    }\n}",
  "sourcePath": "D:/SagarWorkspace/Collective/backend/contracts/CollectiveToken.sol",
  "ast": {
    "absolutePath": "/D/SagarWorkspace/Collective/backend/contracts/CollectiveToken.sol",
    "exportedSymbols": {
      "CollectiveToken": [
        227
      ],
      "Context": [
        893
      ],
      "ERC": [
        734
      ],
      "IERC20": [
        845
      ],
      "IERC20Metadata": [
        870
      ]
    },
    "id": 228,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 200,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:1"
      },
      {
        "absolutePath": "/D/SagarWorkspace/Collective/backend/contracts/ERC.sol",
        "file": "./ERC.sol",
        "id": 201,
        "nodeType": "ImportDirective",
        "scope": 228,
        "sourceUnit": 735,
        "src": "56:19:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 202,
              "name": "ERC",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 734,
              "src": "105:3:1"
            },
            "id": 203,
            "nodeType": "InheritanceSpecifier",
            "src": "105:3:1"
          }
        ],
        "contractDependencies": [
          734,
          845,
          870,
          893
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 227,
        "linearizedBaseContracts": [
          227,
          734,
          870,
          845,
          893
        ],
        "name": "CollectiveToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "156:49:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 211,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "172:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "172:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030303030303030",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "184:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        },
                        "value": "1000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        }
                      ],
                      "id": 210,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 615,
                      "src": "166:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "166:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "166:32:1"
                }
              ]
            },
            "id": 217,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "436f6c6c656374697665546f6b656e",
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "132:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2f58aa2636bacb02c2daef33112da01431085df836acd4ca6fa24617966086cc",
                      "typeString": "literal_string \"CollectiveToken\""
                    },
                    "value": "CollectiveToken"
                  },
                  {
                    "hexValue": "435456",
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "150:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5ae664ef73c22d00a7bd6b94e5828706fa3828ca88834111a5eafd24ddc290f8",
                      "typeString": "literal_string \"CTV\""
                    },
                    "value": "CTV"
                  }
                ],
                "id": 208,
                "modifierName": {
                  "id": 205,
                  "name": "ERC",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 734,
                  "src": "128:3:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "128:28:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "125:2:1"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "156:0:1"
            },
            "scope": 227,
            "src": "114:91:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              302
            ],
            "body": {
              "id": 225,
              "nodeType": "Block",
              "src": "275:25:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "292:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 222,
                  "id": 224,
                  "nodeType": "Return",
                  "src": "285:8:1"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 219,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "251:8:1"
            },
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "228:2:1"
            },
            "returnParameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "269:5:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "268:7:1"
            },
            "scope": 227,
            "src": "211:89:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 228,
        "src": "77:225:1"
      }
    ],
    "src": "31:271:1"
  },
  "legacyAST": {
    "absolutePath": "/D/SagarWorkspace/Collective/backend/contracts/CollectiveToken.sol",
    "exportedSymbols": {
      "CollectiveToken": [
        227
      ],
      "Context": [
        893
      ],
      "ERC": [
        734
      ],
      "IERC20": [
        845
      ],
      "IERC20Metadata": [
        870
      ]
    },
    "id": 228,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 200,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:1"
      },
      {
        "absolutePath": "/D/SagarWorkspace/Collective/backend/contracts/ERC.sol",
        "file": "./ERC.sol",
        "id": 201,
        "nodeType": "ImportDirective",
        "scope": 228,
        "sourceUnit": 735,
        "src": "56:19:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 202,
              "name": "ERC",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 734,
              "src": "105:3:1"
            },
            "id": 203,
            "nodeType": "InheritanceSpecifier",
            "src": "105:3:1"
          }
        ],
        "contractDependencies": [
          734,
          845,
          870,
          893
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 227,
        "linearizedBaseContracts": [
          227,
          734,
          870,
          845,
          893
        ],
        "name": "CollectiveToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "156:49:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 211,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "172:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "172:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030303030303030",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "184:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        },
                        "value": "1000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        }
                      ],
                      "id": 210,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 615,
                      "src": "166:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "166:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "166:32:1"
                }
              ]
            },
            "id": 217,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "436f6c6c656374697665546f6b656e",
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "132:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2f58aa2636bacb02c2daef33112da01431085df836acd4ca6fa24617966086cc",
                      "typeString": "literal_string \"CollectiveToken\""
                    },
                    "value": "CollectiveToken"
                  },
                  {
                    "hexValue": "435456",
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "150:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5ae664ef73c22d00a7bd6b94e5828706fa3828ca88834111a5eafd24ddc290f8",
                      "typeString": "literal_string \"CTV\""
                    },
                    "value": "CTV"
                  }
                ],
                "id": 208,
                "modifierName": {
                  "id": 205,
                  "name": "ERC",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 734,
                  "src": "128:3:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "128:28:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "125:2:1"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "156:0:1"
            },
            "scope": 227,
            "src": "114:91:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              302
            ],
            "body": {
              "id": 225,
              "nodeType": "Block",
              "src": "275:25:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "292:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 222,
                  "id": 224,
                  "nodeType": "Return",
                  "src": "285:8:1"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 219,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "251:8:1"
            },
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "228:2:1"
            },
            "returnParameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "269:5:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "268:7:1"
            },
            "scope": 227,
            "src": "211:89:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 228,
        "src": "77:225:1"
      }
    ],
    "src": "31:271:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xD0945A99Dd45A69A0CfEaA9D4f3C7BD602131CcF",
      "transactionHash": "0xba01ec8d80cfff841f546253d7ac7daa860580878338be63241d37ad0968594a"
    },
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xdf9489a04a6fBaF821021b730e689A290e3f268B",
      "transactionHash": "0x8f378810610e704d3aa18f9a88e14d7e630cd48b0f9ef553d1610047fdb78bd1"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-08-16T11:40:30.500Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}